name: Build libdwarf natives

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  LIBDWARF_VERSION: v0.12.0   # tag/branch to build

# --------------------------------------------------------------------------- #
#  L I N U X                                                                  #
# --------------------------------------------------------------------------- #
jobs:
  build-linux:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: .cache/libdwarf
          key: libdwarf-linux-${{ env.LIBDWARF_VERSION }}

      - name: Install toolchain
        run: |
          sudo apt-get update -y
          sudo apt-get install --no-install-recommends -y \
            build-essential cmake ninja-build pkg-config \
            zlib1g-dev libzstd-dev

      - name: Build shared library
        run: |
          git clone --depth 1 --branch "$LIBDWARF_VERSION" \
            https://github.com/davea42/libdwarf-code libdwarf-code

          cmake -S libdwarf-code -B build -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_SHARED=YES  -DBUILD_NON_SHARED=NO \
                -DCMAKE_INSTALL_PREFIX="$PWD/install"

          cmake --build build --target install --parallel

          WRAP=jna-wrapper/src/main/resources/linux-x86-64
          mkdir -p "$WRAP" out .cache/libdwarf/linux

          shopt -s nullglob
          for so in install/lib/libdwarf*.so*; do
            cp "$so" "$WRAP/"
            cp "$so" out/
            cp "$so" .cache/libdwarf/linux/
          done
          shopt -u nullglob

      - uses: actions/upload-artifact@v4
        with:
          name: libdwarf-linux
          path: out/*

# --------------------------------------------------------------------------- #
#  W I N D O W S                                                              #
# --------------------------------------------------------------------------- #
  build-windows:
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v4

      - name: MSYS2 setup
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-zlib
            git

      - uses: actions/cache@v4
        with:
          path: .cache/libdwarf
          key: libdwarf-windows-${{ env.LIBDWARF_VERSION }}

      - name: Build shared library
        run: |
          git clone --depth 1 --branch "$LIBDWARF_VERSION" \
            https://github.com/davea42/libdwarf-code libdwarf-code

          cmake -S libdwarf-code -B build -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_SHARED=YES  -DBUILD_NON_SHARED=NO \
                -DCMAKE_INSTALL_PREFIX="$PWD/install"

          cmake --build build --target install --parallel

          WRAP=jna-wrapper/src/main/resources/win32-x86-64
          mkdir -p "$WRAP" out .cache/libdwarf/windows

          shopt -s nullglob
          for dll in install/bin/libdwarf*.dll; do
            cp "$dll" "$WRAP/"
            cp "$dll" out/
            cp "$dll" .cache/libdwarf/windows/
          done
          shopt -u nullglob

      - uses: actions/upload-artifact@v4
        with:
          name: libdwarf-windows
          path: out/*

# --------------------------------------------------------------------------- #
#  P U B L I S H                                                              #
# --------------------------------------------------------------------------- #
  publish:
    needs: [build-linux, build-windows]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04

    # ⬇️ give the token write access so we can push the commit
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          path: _artifacts

      - name: Copy binaries into wrapper resources
        run: |
          set -euo pipefail
          copy_if_changed() {
            src="$1"; dest="$2"
            [ -e "$src" ] || return 0
            mkdir -p "$(dirname "$dest")"
            if [ -f "$dest" ] && cmp -s "$src" "$dest"; then
              echo "Unchanged: $dest"
            else
              cp "$src" "$dest"
              echo "Updated:   $dest"
            fi
          }

          find _artifacts/libdwarf-linux   -type f -print0 | \
            while IFS= read -r -d '' f; do
              rel=${f#*_artifacts/libdwarf-linux/}
              copy_if_changed "$f" "jna-wrapper/src/main/resources/linux-x86-64/$rel"
            done

          find _artifacts/libdwarf-windows -type f -print0 | \
            while IFS= read -r -d '' f; do
              rel=${f#*_artifacts/libdwarf-windows/}
              copy_if_changed "$f" "jna-wrapper/src/main/resources/win32-x86-64/$rel"
            done

      - name: Commit & push (only if changed)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add jna-wrapper/src/main/resources || true

          if git diff --cached --quiet; then
            echo "No shared-library updates to commit."
            exit 0
          fi

          git commit -m "Update pre-built libdwarf libraries to ${LIBDWARF_VERSION}"
          git push origin HEAD
